log_omega_hh = log(runif(1,0,1))
)
pomp_filename = "panel_object_pH1N1"
require(ggplot2)
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_functions_hh.R")
source("../../../Imprinting/imprinting_functions.R")
require(panelPomp)
select <- dplyr::select
rename <- dplyr::rename
summarize <- dplyr::summarise
contains <- dplyr::contains
## Set up input and output files  ## ----------------------------------------------------------------------------------------------------------------------------------
dbFilename <- "../../../Data/Data.sqlite"
## Specify high-level fixed params -----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
n_strains = 1
timestep = 2.5
n_years_initial = 7 # Choose the number of years prior to start of observation period from which to draw last time of infection
age_threshold = 15 # Division between children and adults
test_subtype = "pH1N1"
calculate_imprinting = T
imprinting_data_filename = NA # Calculate imprinting probabilities and store file (then can set calculate_imprinting = F)
pomp_filename <- paste0("panel_object_", test_subtype,".rda")
community_intensity_table_name <- paste0("community_intensity_", test_subtype)
host_data_filename = paste0("pomp_data_",test_subtype, ".rda")
## Load in contact matrix ---------------------------------------------------------------------------
source("contact_matrix.R")
## ---------------------------------------------------------------------------------------------------------------------------------------------------------------------
## Get community intensity data
db <- dbConnect(SQLite(), dbFilename)
intensity_data <- dbReadTable(db, community_intensity_table_name) %>%
mutate(full_date = as.Date(full_date, origin = "1970-1-1"))
dbDisconnect(db)
## Load in the file containing the host data list
load(host_data_filename)
## Generate test params
shared_params <- c(
log_transform_titers = 1,
include_imprinting = 0,
imprinting_group = 2,
measurement_error = 2,
log_transform_obs = 1,
include_general_immunity = 1,
variable_boosting = 1,
include_k = 1,
n_strains = 1,
log_beta_scaled = -2.5,
n_age_categories = nrow(contacts),
age_thres = age_threshold,
alpha_kids = log(1000), # wrong value
alpha_adults = log(1000),
phi_kids = 2.102,
phi_adults = 2.102,
log_mean_gam = log(20),
log_var_gam = log(1),
log_T_peak = log(28), # duration of time between initial inection and peak ab titer,6.8 weeks Zhao et al 2016
log_k_kids = log(.9),
log_k_adults = log(.9),
log_w = log(1/180),
log_r = -1,
log_mean_boost_kids = log(2),
log_mean_boost_adults = log(2),
log_sd_boost_kids = -1000,
log_sd_boost_adults = -1000,
logit_d2_kids = -1000,
logit_d2_adults = -1000,
logit_d_general = -1000,
logit_weight_adults = -1000,
logit_weight_kids = -1000,
log_w_general_kids = -6,
log_w_general_adults = -6.5,
log_imprinting_effect_group_1 = log(1),
log_imprinting_effect_group_2 = log(1),
log_omega_hh = .5,
log_sig = log(1.2),
log_sig_2 = log(0.74)
)
shared_params[ paste0("age_contact_group_",c(1:nrow(contacts)))] = contacts$age_participant
shared_params[paste0("beta_community_",c(1:nrow(contacts)))] = contacts$total
# Make sure that individuals have more than one visit for longitudinal data
for( i in c(1:length(host_data_list))){
if(length(unique(host_data_list[[i]]$dates)) <2){
host_data_list[[i]] <- NA
}
if(length(unique(host_data_list[[i]]$starting_dates$date)) > 1){
host_data_list[[i]] <- NA
}
}
ind <- which(is.na(host_data_list))
if(length(ind) > 0 ){
host_data_list <- host_data_list[-which(is.na(host_data_list))]
}
## Generate pomp object ## --------------------------------------------------------------------------------------
hhs <- c(1:length(host_data_list))
host_data_list <- host_data_list[hhs]
pomp_object_list_complete <-lapply(hhs,
make_pomp_panel_hh,
hh_data_list = host_data_list,
test_params = shared_params,
timestep = timestep,
log_transform_titer = F,
n_years_prior = n_years_initial,
L_tol = .00001,
MAX_MEMBERS = 5,
subtype = "pH1N1")
spec_params_df <-data.frame()
n_hh <- length(hhs)
for( i in c(1:n_hh)){
df <- data.frame(ind = i,
param = names(pomp_object_list_complete[[i]]$spec_params),
value = as.numeric(pomp_object_list_complete[[i]]$spec_params))
spec_params_df <- rbind(spec_params_df,df)
}
spec_params_input <- reshape(spec_params_df, idvar = "param", timevar= "ind", direction = "wide")
spec_param_names <- as.character(spec_params_input$param)
if(!file.exists(pomp_filename)){
pomp_object_list <- lapply(pomp_object_list_complete, function(l) l[[1]])
spec_params_input = spec_params_input
spec_param_names <- as.character(spec_params_input$param)
names(pomp_object_list) <- paste0("ind_",c(1:n_hh))
hh_1 <- pomp_object_list[[1]]
shared_params <- coef(hh_1)[!(names(coef(hh_1)) %in% spec_param_names )]
specific_params <- coef(hh_1)[names(coef(hh_1)) %in% spec_param_names]
spec_params_input <- as.matrix(spec_params_input%>% select(-param))
rownames(spec_params_input) <- spec_param_names
colnames(spec_params_input)<- names(pomp_object_list)
## make panel pomp object from individual objects
panelPomp(
object = pomp_object_list,
shared = shared_params,
specific = spec_params_input
) -> panelObject
save(panelObject, host_data_list, file = pomp_filename)
}
########################################################################
## Global search in likelihood space
########################################################################
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source(".././Utility_scripts/model_simulation_functions_multi_strain.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
rename <- dplyr::rename
n_strains = 1
########################################################################
## Sylvia Ranjeva, August 2018
## Global search in likelihood space
########################################################################
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_functions_hh.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
rename <- dplyr::rename
n_strains = 1
# IF running on a high-performance computing cluster --------------------------------------------------------
args = commandArgs(trailingOnly=TRUE)
chainId = as.numeric(args[1])
pomp_filename = "panel_object_pH1N1.rda"
# Specify MIF parameters for this chain ------------------------------------------------------------------------------------------------------------
n_mif = 100
n_mif_updated <- n_mif
n_particles = 10e3
cooling_rate = .9
n_reps_pfilter = 10
n_particles_pfilter = 20e3
evaluate_Lhood = TRUE
# Read in and format contact matrix
source("contact_matrix.R")
## Generate test params
shared_params <- c(
log_transform_titers = 1,
include_imprinting = 0,
imprinting_group = 2,
measurement_error = 2,
log_transform_obs = 1,
include_general_immunity = 1,
variable_boosting = 1,
include_k = 1,
n_strains = 1,
log_beta_scaled = NA,
n_age_categories = nrow(contacts),
age_thres = 15,
alpha_kids = NA,
alpha_adults = NA,
phi_kids = 2.1,
phi_adults = 2.1,
log_mean_gam = log(5),
log_var_gam = log(1),
log_T_peak = log(28), # duration of time between initial inection and peak ab titer,6.8 weeks Zhao et al 2016
log_k_kids = NA,
log_k_adults = NA,
log_w = log(log(2)/204),
log_r = log(log(2)/(28/10)),(1/180),
log_mean_boost_kids = NA,
log_mean_boost_adults = NA,
log_sd_boost_kids = NA,
log_sd_boost_adults = NA,
logit_d2_kids = NA,
logit_d2_adults = NA,
logit_weight_adults = NA,
logit_weight_kids = NA,
logit_d_general = NA,
log_w_general_kids = NA,
log_w_general_adults = NA,
log_imprinting_effect_group_1 = NA,
log_imprinting_effect_group_2 = NA,
log_omega_hh = NA,
log_sig = log(1.1),
log_sig_2 = log(0.74)
)
shared_params[ paste0("age_contact_group_",c(1:nrow(contacts)))] = contacts$age_participant
shared_params[paste0("beta_community_",c(1:nrow(contacts)))] = contacts$total
rw_sd_vec <- rw.sd(
log_beta_scaled = 0.01,
alpha_kids = 0.01,
alpha_adults = 0.01,
log_imprinting_effect_group_1 = 0,
log_imprinting_effect_group_2 = 0,
logit_d2_adults = 0,
logit_d2_kids = 0.01,
logit_d_general = 0,
log_w_general_kids = 0,
log_w_general_adults = 0.01,
logit_weight_adults = 0.01,
logit_weight_kids = 0,
log_omega_hh = 0.01
)
inferred_params <- c(
log_beta_scaled = log(runif(1,0,1)),
alpha_kids = runif(1,0,5),
alpha_adults = runif(1,0,5),
log_k_kids = -.36,
log_k_adults = -1.1,
log_imprinting_effect_group_1  = 0,
log_imprinting_effect_group_2 = 0,#log(runif(1,0.1,5)),
log_mean_boost_kids = 4.45,
log_sd_boost_kids = -0.02,
log_mean_boost_adults = 2.63,
log_sd_boost_adults = 0.6,
logit_d2_kids = logit(runif(1,0.1,0.9)),
logit_d2_adults = -2.5,
logit_weight_kids = 15,
logit_weight_adults = logit(runif(1,0.1,0.9)),
logit_d_general = -50,#logit(runif(1,.1,.9)),
log_w_general_kids = 100,
log_w_general_adults = log(runif(1,0,1/180)),
log_omega_hh = log(runif(1,0,1))
)
n_mif
n_mif = 1
n_particles = 2
n_reps_pfilter = 2
n_particles_pfilter = 2
source("global_search_methods.R")
load(pomp_filename)
guess.shared <- shared_params
for( i in c(1:length(inferred_params))){
guess.shared[which(names(guess.shared) == names(inferred_params[i]))] <- inferred_params[i]
}
#guess.shared[names(guess.shared) %in% names(inferred_params)] <- inferred_params
guess.specific <- panelObject@pParams$specific
guess.shared
guess.specific
start <- Sys.time()
mf <- mif2(
panelObject,
Nmif = n_mif,
shared.start = unlist(guess.shared),
specific.start = matrix(
data =  guess.specific,
nrow = nrow(guess.specific),
ncol = ncol(guess.specific),
dimnames = list(rownames(guess.specific),
colnames(guess.specific))
),
rw.sd = rw_sd_vec,
cooling.type = "geometric",
cooling.fraction.50 = cooling_rate,
Np = n_particles
)
guess.shared
v1 <- guess.shared
v2 <- panelObject@pParams$shared
length(v1)
which(!(v1 %in% v2))
which(!(names(v1) %in% names(v2)))
v1[24]
names(v1[24])
names(v1[25])
names(v1[23])
########################################################################
## Sylvia Ranjeva, August 2018
## Global search in likelihood space
########################################################################
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_functions_hh.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
rename <- dplyr::rename
n_strains = 1
# IF running on a high-performance computing cluster --------------------------------------------------------
args = commandArgs(trailingOnly=TRUE)
chainId = as.numeric(args[1])
## Specify filenames for model input and output files ------------------------------------------------------------------------------------------------------------
output_filename <- paste0("") # Name of the file (".csv") that will store the parameter output and the likelihood
chain_filename <- paste0("chain_",chainId,".rda") # Name of the file (".rda") that will store the MIF chain
pomp_filename <- "panel_object_H1_all.rda" # Name of the file (".rda") that stores the POMP object
# Specify MIF parameters for this chain ------------------------------------------------------------------------------------------------------------
n_mif = 1
n_mif_updated <- n_mif
n_particles = 2
cooling_rate = .9
n_reps_pfilter = 2
n_particles_pfilter = 2
evaluate_Lhood = TRUE
# Read in and format contact matrix
source("contact_matrix.R")
## Generate test params
shared_params <- c(
log_transform_titers = 1,
include_imprinting = 0,
imprinting_group = 2,
measurement_error = 2,
log_transform_obs = 1,
include_general_immunity = 1,
variable_boosting = 1,
include_k = 1,
n_strains = 1,
log_beta_scaled = NA,
n_age_categories = nrow(contacts),
age_thres = 15,
alpha_kids = NA,
alpha_adults = NA,
phi_kids = 2.1,
phi_adults = 2.1,
log_mean_gam = log(5),
log_var_gam = log(1),
log_T_peak = log(28), # duration of time between initial inection and peak ab titer,6.8 weeks Zhao et al 2016
log_k_kids = NA,
log_k_adults = NA,
log_w = log(log(2)/204),
log_r = log(log(2)/(28/10)),
log_mean_boost_kids = NA,
log_mean_boost_adults = NA,
log_sd_boost_kids = NA,
log_sd_boost_adults = NA,
logit_d2_kids = NA,
logit_d2_adults = NA,
logit_weight_adults = NA,
logit_weight_kids = NA,
logit_d_general = NA,
log_w_general_kids = NA,
log_w_general_adults = NA,
log_imprinting_effect_group_1 = NA,
log_imprinting_effect_group_2 = NA,
log_omega_hh = NA,
log_sig = log(1.1),
log_sig_2 = log(0.74)
)
shared_params[ paste0("age_contact_group_",c(1:nrow(contacts)))] = contacts$age_participant
shared_params[paste0("beta_community_",c(1:nrow(contacts)))] = contacts$total
rw_sd_vec <- rw.sd(
log_beta_scaled = 0.01,
alpha_kids = 0.01,
alpha_adults = 0.01,
log_imprinting_effect_group_1 = 0,
log_imprinting_effect_group_2 = 0,
logit_d2_adults = 0,
logit_d2_kids = 0.01,
logit_d_general = 0,
log_w_general_kids = 0,
log_w_general_adults = 0.01,
logit_weight_adults = 0.01,
logit_weight_kids = 0,
log_omega_hh = 0.01
)
inferred_params <- c(
log_beta_scaled = log(runif(1,0,1)),
alpha_kids = runif(1,0,5),
alpha_adults = runif(1,0,5),
log_k_kids = -.36,
log_k_adults = -1.1,
log_imprinting_effect_group_1  = 0,
log_imprinting_effect_group_2 = 0,#log(runif(1,0.1,5)),
log_mean_boost_kids = 4.45,
log_sd_boost_kids = -0.02,
log_mean_boost_adults = 2.63,
log_sd_boost_adults = 0.6,
logit_d2_kids = logit(runif(1,0.1,0.9)),
logit_d2_adults = -2.5,
logit_weight_kids = 15,
logit_weight_adults = logit(runif(1,0.1,0.9)),
logit_d_general = -50,#logit(runif(1,.1,.9)),
log_w_general_kids = 100,
log_w_general_adults = log(runif(1,0,1/180)),
log_omega_hh = log(runif(1,0,1))
)
source("global_search_methods.R")
pomp_filename = "panel_object_pH1N1.rda"
## Generate test params
shared_params <- c(
log_transform_titers = 1,
include_imprinting = 0,
imprinting_group = 2,
measurement_error = 2,
log_transform_obs = 1,
include_general_immunity = 1,
variable_boosting = 1,
include_k = 1,
n_strains = 1,
log_beta_scaled = NA,
n_age_categories = nrow(contacts),
age_thres = 15,
alpha_kids = NA,
alpha_adults = NA,
phi_kids = 2.1,
phi_adults = 2.1,
log_mean_gam = log(5),
log_var_gam = log(1),
log_T_peak = log(28), # duration of time between initial inection and peak ab titer,6.8 weeks Zhao et al 2016
log_k_kids = NA,
log_k_adults = NA,
log_w = log(log(2)/204),
log_r = log(log(2)/(28/10)),
log_mean_boost_kids = NA,
log_mean_boost_adults = NA,
log_sd_boost_kids = NA,
log_sd_boost_adults = NA,
logit_d2_kids = NA,
logit_d2_adults = NA,
logit_weight_adults = NA,
logit_weight_kids = NA,
logit_d_general = NA,
log_w_general_kids = NA,
log_w_general_adults = NA,
log_imprinting_effect_group_1 = NA,
log_imprinting_effect_group_2 = NA,
log_omega_hh = NA,
log_sig = log(1.1),
log_sig_2 = log(0.74)
)
shared_params[ paste0("age_contact_group_",c(1:nrow(contacts)))] = contacts$age_participant
shared_params[paste0("beta_community_",c(1:nrow(contacts)))] = contacts$total
rw_sd_vec <- rw.sd(
log_beta_scaled = 0.01,
alpha_kids = 0.01,
alpha_adults = 0.01,
log_imprinting_effect_group_1 = 0,
log_imprinting_effect_group_2 = 0,
logit_d2_adults = 0,
logit_d2_kids = 0.01,
logit_d_general = 0,
log_w_general_kids = 0,
log_w_general_adults = 0.01,
logit_weight_adults = 0.01,
logit_weight_kids = 0,
log_omega_hh = 0.01
)
inferred_params <- c(
log_beta_scaled = log(runif(1,0,1)),
alpha_kids = runif(1,0,5),
alpha_adults = runif(1,0,5),
log_k_kids = -.36,
log_k_adults = -1.1,
log_imprinting_effect_group_1  = 0,
log_imprinting_effect_group_2 = 0,#log(runif(1,0.1,5)),
log_mean_boost_kids = 4.45,
log_sd_boost_kids = -0.02,
log_mean_boost_adults = 2.63,
log_sd_boost_adults = 0.6,
logit_d2_kids = logit(runif(1,0.1,0.9)),
logit_d2_adults = -2.5,
logit_weight_kids = 15,
logit_weight_adults = logit(runif(1,0.1,0.9)),
logit_d_general = -50,#logit(runif(1,.1,.9)),
log_w_general_kids = 100,
log_w_general_adults = log(runif(1,0,1/180)),
log_omega_hh = log(runif(1,0,1))
)
source("global_search_methods.R")
evaluate_Lhood
evaluate_Lhood == TRUE
output
write.table(output, file = output_filename, sep = ",",col.names = FALSE, append=TRUE)
write.csv(output, file = output_filename, sep = ",",col.names = FALSE, append=TRUE)
output_filename
output_filename <- "output.csv"
write.table(output, file = output_filename, sep = ",",col.names = FALSE, append=TRUE)
source("global_search_methods.R")
