filter(sim ==1) %>%
select(ind,sim,time,date,age,h_obs) %>%
group_by(ind,sim,age) %>%
mutate(diff = c(NA,diff(h_obs))) %>%
filter(!is.na(diff)) %>%
mutate(twofold = as.numeric(diff > 0),
fourfold = as.numeric(diff > 1),
eightfold = as.numeric(diff > 2)) %>%
group_by(ind,sim,age) %>%
summarize(n_2 = sum(twofold),
n_4 = sum(fourfold),
n_8 = sum(eightfold)) %>%
group_by(sim,n_2) %>%
summarize(n =length(ind)) %>%
group_by(n_2) %>%
summarize(mean = mean(n),
min = min(n),#quantile(n,c(.1,.9))[1],#min(n),
max = max(n), #quantile(n,c(.1,.9))[2],
data = "obs") %>%
rename(n=n_2)
df2 <- rbind(df_sim,df_obs) %>%
mutate(n_fold = "2 - fold")
# 4-fold
df_sim <- titer_df_sub %>%
select(ind,sim,time,date,age,h_obs_sim) %>%
group_by(ind,sim,age) %>%
mutate(diff = c(NA,diff(h_obs_sim))) %>%
filter(!is.na(diff)) %>%
mutate(twofold = as.numeric(diff > 0),
fourfold = as.numeric(diff > 1),
eightfold = as.numeric(diff > 2)) %>%
group_by(ind,sim,age) %>%
summarize(n_2 = sum(twofold),
n_4 = sum(fourfold),
n_8 = sum(eightfold)) %>%
group_by(sim,n_4) %>%
summarize(n =length(ind)) %>%
group_by(n_4) %>%
summarize(mean = mean(n),
min = min(n),#quantile(n,c(.025,.975))[1],#min(n),
max = max(n),#quantile(n,c(.025,.975))[2],
data = "sim") %>%
rename(n = n_4)
df_obs <- titer_df_sub %>%
filter(sim == 1) %>%
select(ind,sim,time,date,age,h_obs) %>%
group_by(ind,sim,age) %>%
mutate(diff = c(NA,diff(h_obs))) %>%
filter(!is.na(diff)) %>%
mutate(twofold = as.numeric(diff > 0),
fourfold = as.numeric(diff > 1),
eightfold = as.numeric(diff > 2)) %>%
group_by(ind,sim,age) %>%
summarize(n_2 = sum(twofold),
n_4 = sum(fourfold),
n_8 = sum(eightfold)) %>%
group_by(sim,n_4) %>%
summarize(n =length(ind)) %>%
group_by(n_4) %>%
summarize(mean = mean(n),
min = min(n),#quantile(n,c(.025,.975))[1],#min(n),
max = max(n),#quantile(n,c(.025,.975))[2],
data = "obs") %>%
rename(n = n_4)
df4 <- rbind(df_sim,df_obs) %>%
mutate(n_fold = "4 - fold")
## 8-fold
df_sim <- titer_df_sub %>%
select(ind,sim,time,date,age,h_obs_sim) %>%
group_by(ind,sim,age) %>%
mutate(diff = c(NA,diff(h_obs_sim))) %>%
filter(!is.na(diff)) %>%
mutate(twofold = as.numeric(diff > 0),
fourfold = as.numeric(diff > 1),
eightfold = as.numeric(diff > 2)) %>%
group_by(ind,sim,age) %>%
summarize(n_2 = sum(twofold),
n_4 = sum(fourfold),
n_8 = sum(eightfold)) %>%
group_by(sim,n_8) %>%
summarize(n =length(ind)) %>%
group_by(n_8) %>%
summarize(mean = mean(n),
min = min(n),
max = max(n),
data = "sim") %>%
rename(n = n_8)
df_obs <- titer_df_sub %>%
filter(sim == 1) %>%
select(ind,sim,time,date,age,h_obs) %>%
group_by(ind,sim,age) %>%
mutate(diff = c(NA,diff(h_obs))) %>%
filter(!is.na(diff)) %>%
mutate(twofold = as.numeric(diff > 0),
fourfold = as.numeric(diff > 1),
eightfold = as.numeric(diff > 2)) %>%
group_by(ind,sim,age) %>%
summarize(n_2 = sum(twofold),
n_4 = sum(fourfold),
n_8 = sum(eightfold)) %>%
group_by(sim,n_8) %>%
summarize(n =length(ind)) %>%
group_by(n_8) %>%
summarize(mean = mean(n),
min = min(n),
max = max(n),
data = "obs") %>%
rename(n = n_8)
df8 <- rbind(df_sim,df_obs) %>%
mutate(n_fold = "8 - fold")
df = rbind(df2,df4,df8)
n_ind = length(unique(titer_df_sub$ind))
p_frac <-  ggplot(df %>% filter(data == "sim"), aes( x = n , y = mean/n_ind)) +
geom_point(aes(color = data)) +
geom_line(aes(color = data), linetype =2 ) +
geom_ribbon(aes(ymin = min/n_ind, ymax = max/n_ind),
fill = "blue",
linetype = 2,
alpha=.15) +
geom_point(data = df %>% filter(data == "obs"), aes( x = n, y = mean/n_ind, color = data)) +
geom_line(data = df %>% filter(data == "obs"), aes( x = n, y = mean/n_ind, color = data), linetype =2) +
xlab("Number of n-fold rises over followup") +
labs(color = "Data type") +
ylab("Fraction of population") +
facet_wrap(~n_fold, scales = "free_x") +
xlim(0,4) +
plot_themes
return(p_frac)
}
p_adults <- make_fold_rises_plot(titer_df_sub = titer_df_all %>% filter(child == 0))
p_adults
p_children <- make_fold_rises_plot(titer_df_sub = titer_df_all %>% filter(child == 1))
p_children
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Single_strain_model/Simulations/Model_validation/Plotting_scripts")
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Single_strain_model/Simulations/Model_validation")
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Single_strain_model/Results_analysis")
load("param_names.rda")
param_names
names <- names %>% select(-c(loglik, nfail, iter, chain))
names <- param_names[-c("loglik", "nfail", "iter", "chain")]
names <- param_names[-c(1,2,50,51)]
names
save(names , file = "param_names.rda")
load("param_names.rda")
setwd("/Volumes/cobey/s_ranjeva/2018_4_old_H3/results_analysis")
########################################################################
## Analyze the final results of a MIF search in parameter space
########################################################################
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_simulation_functions_multi_strain.R")
textSize = 12
source("../Utility_scripts/plot_themes.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarise
## Input specs ## --------------------------------------------------------------------------------------------------------------------------------------------------------------------
chain_filename <- "chain_results_combined.rda"
result_type = "global"
profile_filenames <- c("../Inference/profile_beta_all.csv")
param_name = "log_beta_scaled"
n_bin_points <- c(150)
bin_points <- seq(-4,-2, length.out = n_bin_points)
MLE_filename = "MLEs_H3_beta"
##-----------------------------
results <- as.data.frame(read.csv( profile_filenames[i] ))%>% select(-se)
names(results) <- c(names, "loglik", "loglik_se", "n_mif", "n_part", "chain")
i =
1
i = 1
results <- as.data.frame(read.csv( profile_filenames[i] ))%>% select(-se)
names(results) <- c(names, "loglik", "loglik_se", "n_mif", "n_part", "chain")
results_profiles <- data.frame()
this_param <- param_name
results$focal_param <- results[,names(results) == this_param]
results_sub <- results %>% group_by(focal_param) %>%  summarize(LL = max(loglik)) %>% mutate(dLL = LL - max(LL))
results_sub$param = this_param
results_profiles <- rbind(results_profiles,results_sub)
results_sub$dLL <- results_sub$LL - max(results_sub$LL)
results_profiles = data.frame()
res = results
df_binned <- data.frame()
for( j in c(1:(length(bin_points)-1))){
df_sub <- res %>% filter(focal_param >= bin_points[j] & focal_param < bin_points[j+1]) %>%
arrange(-loglik)
if(nrow(df_sub) > 0){
df_binned <- rbind(df_binned,df_sub[1,])
}
}
df_binned$param = param_name
results_profiles = rbind(results_profiles,df_binned)
results_profiles$dLL = results_profiles$loglik - max(results_profiles$loglik)
df_MLE <- data.frame()
sub <- results_profiles
mcap_sub <- mcap(lp = sub$dLL, param = sub$focal_param, lambda = .5)
fit = mcap_sub$fit
df <- data.frame(MLE = mcap_sub$mle,
LCI = mcap_sub$ci[1],
UCI = mcap_sub$ci[2],
param = param_name)
df
mcap_sub <- mcap(lp = sub$dLL, param = sub$focal_param, lambda = .75)
fit = mcap_sub$fit
df <- data.frame(MLE = mcap_sub$mle,
LCI = mcap_sub$ci[1],
UCI = mcap_sub$ci[2],
param = param_name)
df
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Short_term_sub_model/Inference")
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
dbTableNames(db)
dbDisconnect(db)
## Specify the name of the pomp object file ------------------------------------------------------
test_subtype = "pH1N1" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
head(serology_sub)
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
demog <- dbReadTable(db, "demography_full_model") %>%
mutate(birthdate = as.Date(birthdate, origin = "1970-1-1"),
visitdate = as.Date(visitdate, origin = "1970-1-1"))
dbDisconnect(db)
# Filtering for kids <= 15 y old, but can be altered to generate pomp object for adults too
ids <- demog %>% filter(age_at_recruitment <= 15) %>% select(memberID) %>% unlist() %>% as.numeric()
serology_sub <- serology_sub %>% filter(memberID %in% ids)
ids
dim(serology_sub)
head(serology_sub)
setwd("/Volumes/cobey/s_ranjeva/2018_old_4_PCR_ps/Inference_H1")
## Extract and format data
library(RSQLite)
library(ggplot2)
library(reshape2)
library(plyr)
library(dplyr)
library(lubridate)
source("../Utility_scripts/data_formatting_functions.R")
textSize = 12
source("../Utility_scripts/plot_themes.R")
select <- dplyr::select
rename <- dplyr::rename
summarize <- dplyr::summarise
group_by <- dplyr::group_by
## Get the participant data ## ----------------------------------------------------------------------------------------
dbFilename <- "../Data/hongkongflu.sqlite"
pilot_data_filename <- "../Raw_data_analysis/extract_pilot_data.R"
source("../Raw_data_analysis/extract_relevant_data_H3.R")
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Short_term_sub_model/Inference")
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_simulation_functions_boosting.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
## Specify the name of the pomp object file ------------------------------------------------------
test_subtype = "pH1N1" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
pomp_filename <- "" # Name the pomp object file (".rda" file)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
demog_sub <- demog %>% filter(memberID %in% serology_sub$memberID)
save(demog_sub, file = "demog_sub_H1.rda")
test_subtype = "H3N2" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
pomp_filename <- "" # Name the pomp object file (".rda" file)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
demog_sub <- demog %>% filter(memberID %in% serology_sub$memberID)
save(demog_sub, file = "demog_sub_H3.rda")
head(demog_sub)
head(serology_sub)
demog_sub <- demog_sub %>% select(memberID, age_at_recruitment)
serology_sub <- serology_sub %>% left_join(.,demog_sub , by = "memberID")
head(serology_sub)
data_table_name
db <- dbConnect(SQLite(), dbFilename)
dbWriteTable(db, data_table_name, serology_sub, overwrite = T)
dbDisconnect(db)
test_subtype = "pH1N1" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
pomp_filename <- "" # Name the pomp object file (".rda" file)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
head(serology_sub )
head(serology_sub)
load("demog_sub_H1.rda")
demog_sub <- demog_sub %>% select(memberID, age_at_recruitment)
head(demog_sub)
serology_sub <- serology_sub %>% left_join(.,demog_sub , by = "memberID")
head(serology_sub)
data_table_name
db <- dbConnect(SQLite(), dbFilename)
dbWriteTable(db, data_table_name, serology_sub, overwrite = T)
dbDisconnect(db)
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Short_term_sub_model/Inference")
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_simulation_functions_boosting.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
## Specify the name of the pomp object file ------------------------------------------------------
test_subtype = "pH1N1" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
pomp_filename <- "" # Name the pomp object file (".rda" file)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
head(serology_sub)
serology_sub <- serology_sub %>% filter(age_at_recruitment <= 15)
timestep = 2.5 # Simulation timestep, days
length(unique(serology_sub$memberID))
timestep = 2.5 # Simulation timestep, days
## Generate test params
shared_params <- c(
log_transform_titers = 1,
measurement_error = 2,
log_transform_obs = 1,
variable_boosting = 1,
include_k = 1,
log_mean_gam = log(5),
log_var_gam = log(1),
log_T_peak = log(28),
log_k = log(.9), # trivial value just to construct the pomp object
log_w = log(1/180),
log_r = log(log(2)/(28*10)),
log_mean_boost = log(8), # trivial value just to construct the pomp object
log_sd_boost = log(.1), # trivial value just to construct the pomp object
log_sig = log(1.29),
log_sig_2 = log(0.74)
)
test_ids = unique(serology_sub$memberID)
pomp_object_list <- lapply(c(1:length(test_ids)),
test_ids = test_ids,
make_pomp_panel,
data = serology_sub_H1,
test_params = shared_params,
timestep = timestep,
log_transform_titer = F
)
spec_params_df <-data.frame()
pomp_object_list <- lapply(c(1:length(test_ids)),
test_ids = test_ids,
make_pomp_panel,
data = serology_sub,
test_params = shared_params,
timestep = timestep,
log_transform_titer = F
)
spec_params_df <-data.frame()
head(serology_sub)
select <- dplyr::select
summarize <- dplyr::summarize
rename <- dplyr::rename
pomp_object_list <- lapply(c(1:length(test_ids)),
test_ids = test_ids,
make_pomp_panel,
data = serology_sub,
test_params = shared_params,
timestep = timestep,
log_transform_titer = F
)
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_simulation_functions_boosting.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
rename <- dplyr::rename
## Specify the name of the pomp object file ------------------------------------------------------
test_subtype = "pH1N1" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
pomp_filename <- "" # Name the pomp object file (".rda" file)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
# Filtering for kids <= 15 y old, but can be altered to generate pomp object for adults too
serology_sub <- serology_sub %>% filter(age_at_recruitment <= 15)
timestep = 2.5 # Simulation timestep, days
## Generate test params
shared_params <- c(
log_transform_titers = 1,
measurement_error = 2,
log_transform_obs = 1,
variable_boosting = 1,
include_k = 1,
log_mean_gam = log(5),
log_var_gam = log(1),
log_T_peak = log(28),
log_k = log(.9), # trivial value just to construct the pomp object
log_w = log(1/180),
log_r = log(log(2)/(28*10)),
log_mean_boost = log(8), # trivial value just to construct the pomp object
log_sd_boost = log(.1), # trivial value just to construct the pomp object
log_sig = log(1.29),
log_sig_2 = log(0.74)
)
test_ids = unique(serology_sub$memberID)
pomp_object_list <- lapply(c(1:length(test_ids)),
test_ids = test_ids,
make_pomp_panel,
data = serology_sub,
test_params = shared_params,
timestep = timestep,
log_transform_titer = F
)
spec_params_df <-data.frame()
head(serology_sub)
require(ggplot2)
theme_set(theme_bw(base_size = 18))
require(MASS)
require(RSQLite)
require(reshape2)
require(dplyr)
source("../Utility_scripts/model_simulation_functions_boosting.R")
require(pomp)
require(panelPomp)
select <- dplyr::select
summarize <- dplyr::summarize
rename <- dplyr::rename
## Specify the name of the pomp object file ------------------------------------------------------
test_subtype = "pH1N1" # Choose between "pH1N1" and "H3N2"
data_table_name <- paste0("data_sub_model_",test_subtype)
pomp_filename <- "" # Name the pomp object file (".rda" file)
dbFilename <- "../../../Data/Data.sqlite"
#Read in data
db <- dbConnect(SQLite(), dbFilename)
serology_sub <- dbReadTable(db, data_table_name)
dbDisconnect(db)
# Filtering for kids <= 15 y old, but can be altered to generate pomp object for adults too
serology_sub <- serology_sub %>% filter(age_at_recruitment <= 15)
timestep = 2.5 # Simulation timestep, days
## Generate test params
shared_params <- c(
log_transform_titers = 1,
measurement_error = 2,
log_transform_obs = 1,
variable_boosting = 1,
include_k = 1,
log_mean_gam = log(5),
log_var_gam = log(1),
log_T_peak = log(28),
log_k = log(.9), # trivial value just to construct the pomp object
log_w = log(1/180),
log_r = log(log(2)/(28*10)),
log_mean_boost = log(8), # trivial value just to construct the pomp object
log_sd_boost = log(.1), # trivial value just to construct the pomp object
log_sig = log(1.29),
log_sig_2 = log(0.74)
)
test_ids = unique(serology_sub$memberID)
pomp_object_list <- lapply(c(1:length(test_ids)),
test_ids = test_ids,
make_pomp_panel,
data = serology_sub,
test_params = shared_params,
timestep = timestep,
log_transform_titer = F
)
spec_params_df <-data.frame()
for( i in c(1:length(test_ids))){
df <- data.frame(ind = i,
param = names(pomp_object_list[[i]]$spec_params),
value = as.numeric(pomp_object_list[[i]]$spec_params))
spec_params_df <- rbind(spec_params_df,df)
}
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Short_term_sub_model/Inference")
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Single_strain_model/Inference")
setwd("~/Desktop/Flu_immune_dynamics/Influenza-immune-dynamics/Models/Multi_strain_model/Inference")
